/**
 *  Maimónides, gestión para centros escolares.
 *  Copyright Codeko and individual contributors
 *  as indicated by the @author tags.
 * 
 *  This is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as
 *  published by the Free Software Foundation; either version 2 of
 *  the License, or (at your option) any later version.
 * 
 *  This software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public
 *  License along with this software; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *  02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *  
 *  For more information:
 *  maimonides@codeko.com
 *  http://codeko.com/maimonides
 **/
package com.codeko.apps.maimonides.usr;

import com.codeko.apps.maimonides.MaimonidesApp;
import com.codeko.apps.maimonides.dnie.DNIeLoginManager;
import com.codeko.util.Str;
import java.awt.Font;
import java.awt.Window;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.SwingUtilities;

/**
 * Panel para la petición de usuario y clave 
 * @author Codeko
 */
public class PanelAcceso extends javax.swing.JPanel {

    /** Creates new form PanelAccesoSeneca */
    public PanelAcceso() {
        initComponents();
        setError(false);
        lError.setFont(lError.getFont().deriveFont(Font.BOLD));
        lTitulo.setFont(lTitulo.getFont().deriveFont(Font.BOLD));
        lTitulo.setFont(lTitulo.getFont().deriveFont(lTitulo.getFont().getSize() + 2));
        MaimonidesApp.getApplication().addPropertyChangeListener("usuario", new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                if (pce.getNewValue() != null) {
                    Window w = SwingUtilities.getWindowAncestor(lInfo);
                    if (w != null) {
                        w.dispose();
                    }
                }
            }
        });

        DNIeLoginManager.getLoginManager().addPropertyChangeListener("message", new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                final PropertyChangeEvent pce2 = pce;
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        lInfo.setText(pce2.getNewValue() + "");
                    }
                });
            }
        });
    }

    public void setDatos(String usuario, String clave, boolean recordad) {
        tfusuario.setText(Str.noNulo(usuario));
        tfClave.setText(Str.noNulo(clave));
        cbRecordar.setSelected(recordad);
    }

    public String getUsuario() {
        return tfusuario.getText().trim();
    }

    public final void setError(boolean error) {
        lError.setVisible(error);
    }

    public String getClave() {
        return new String(tfClave.getPassword()).trim();
    }

    public boolean isRecordar() {
        return cbRecordar.isSelected();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lUsuario = new javax.swing.JLabel();
        lClave = new javax.swing.JLabel();
        tfusuario = new javax.swing.JTextField();
        tfClave = new javax.swing.JPasswordField();
        cbRecordar = new javax.swing.JCheckBox();
        lError = new javax.swing.JLabel();
        lTitulo = new javax.swing.JLabel();
        lIntro = new javax.swing.JLabel();
        lInfo = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(PanelAcceso.class);
        lUsuario.setText(resourceMap.getString("lUsuario.text")); // NOI18N
        lUsuario.setName("lUsuario"); // NOI18N

        lClave.setText(resourceMap.getString("lClave.text")); // NOI18N
        lClave.setName("lClave"); // NOI18N

        tfusuario.setText(resourceMap.getString("tfusuario.text")); // NOI18N
        tfusuario.setName("tfusuario"); // NOI18N
        tfusuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfusuarioFocusGained(evt);
            }
        });

        tfClave.setText(resourceMap.getString("tfClave.text")); // NOI18N
        tfClave.setName("tfClave"); // NOI18N
        tfClave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfClaveFocusGained(evt);
            }
        });

        cbRecordar.setText(resourceMap.getString("cbRecordar.text")); // NOI18N
        cbRecordar.setName("cbRecordar"); // NOI18N

        lError.setForeground(resourceMap.getColor("lError.foreground")); // NOI18N
        lError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lError.setText(resourceMap.getString("lError.text")); // NOI18N
        lError.setName("lError"); // NOI18N

        lTitulo.setIcon(resourceMap.getIcon("lTitulo.icon")); // NOI18N
        lTitulo.setText(resourceMap.getString("lTitulo.text")); // NOI18N
        lTitulo.setName("lTitulo"); // NOI18N

        lIntro.setText(resourceMap.getString("lIntro.text")); // NOI18N
        lIntro.setName("lIntro"); // NOI18N

        lInfo.setText(resourceMap.getString("lInfo.text")); // NOI18N
        lInfo.setName("lInfo"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                    .addComponent(lError, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                    .addComponent(lIntro, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                    .addComponent(lTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(cbRecordar, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lClave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(lUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfusuario, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                            .addComponent(tfClave, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lClave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbRecordar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lInfo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfusuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfusuarioFocusGained
        tfusuario.selectAll();
    }//GEN-LAST:event_tfusuarioFocusGained

    private void tfClaveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfClaveFocusGained
        tfClave.selectAll();
    }//GEN-LAST:event_tfClaveFocusGained
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbRecordar;
    private javax.swing.JLabel lClave;
    private javax.swing.JLabel lError;
    private javax.swing.JLabel lInfo;
    private javax.swing.JLabel lIntro;
    private javax.swing.JLabel lTitulo;
    private javax.swing.JLabel lUsuario;
    private javax.swing.JPasswordField tfClave;
    private javax.swing.JTextField tfusuario;
    // End of variables declaration//GEN-END:variables
}
