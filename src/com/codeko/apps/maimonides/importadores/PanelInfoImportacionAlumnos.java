/**
 *  Maimónides, gestión para centros escolares.
 *  Copyright Codeko and individual contributors
 *  as indicated by the @author tags.
 * 
 *  This is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as
 *  published by the Free Software Foundation; either version 2 of
 *  the License, or (at your option) any later version.
 * 
 *  This software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public
 *  License along with this software; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *  02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *  
 *  For more information:
 *  maimonides@codeko.com
 *  http://codeko.com/maimonides
**/


/*
 * PanelInfoImportacionAlumnos.java
 *
 * Created on 05-mar-2009, 8:56:06
 */
package com.codeko.apps.maimonides.importadores;

import com.codeko.swing.CodekoTableModel;
import com.codeko.apps.maimonides.elementos.Alumno;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Vector;

/**
 *
 * @author Codeko
 */
public class PanelInfoImportacionAlumnos extends javax.swing.JPanel {

    CodekoTableModel<Alumno> modeloBorrados = new CodekoTableModel<Alumno>(new Alumno());
    CodekoTableModel<Alumno> modeloNuevos = new CodekoTableModel<Alumno>(new Alumno());
    Vector<Vector<Object>> errores = new Vector<Vector<Object>>();
    Vector<String> cab = new Vector<String>();
    int procesados = 0;
    int guardados = 0;

    /** Creates new form PanelInfoImportacionAlumnos */
    public PanelInfoImportacionAlumnos() {
        cab.add("Alumno");
        cab.add("Unidad");
        cab.add("Error");
        initComponents();

    }

    public PanelInfoImportacionAlumnos(ArrayList<Alumno> borrados, ArrayList<Alumno> nuevos, ArrayList<ArrayList<Object>> errores, int procesados, int guardados) {
        //Tenemos que convertirlo a vector porque el modelo sólo admite vectores
        for (ArrayList<Object> o : errores) {
            Vector v = new Vector(o);
            this.errores.add(v);
        }
        this.procesados = procesados;
        this.guardados = guardados;
        cab.add("Alumno");
        cab.add("Unidad");
        cab.add("Error");
        initComponents();
        modeloBorrados.setDatos(borrados);
        modeloNuevos.setDatos(nuevos);
        ArrayList<Component> borrar = new ArrayList<Component>();
        if (borrados.size() > 0) {
            panelPestanas.setTitleAt(0, "Alumnos trasladados o dados de baja (" + borrados.size() + ")");
        } else {
            borrar.add(panelBajas);
        }
        if (nuevos.size() > 0) {
            panelPestanas.setTitleAt(1, "Alumnos nuevos (" + nuevos.size() + ")");
        } else {
            borrar.add(panelAltas);
        }

        if (errores.size() > 0) {
            panelPestanas.setTitleAt(2, "Errores (" + errores.size() + ")");
        } else {
            borrar.add(panelErrores);
        }
//        for (Component c : borrar) {
//            panelPestanas.remove(c);
//        }
//        if (panelPestanas.getTabCount() == 0) {
//            remove(panelPestanas);
//        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPestanas = new javax.swing.JTabbedPane();
        panelBajas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBorrados = new org.jdesktop.swingx.JXTable();
        panelAltas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaNuevos = new org.jdesktop.swingx.JXTable();
        panelErrores = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaErrores = new org.jdesktop.swingx.JXTable();
        lTitulo = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        panelPestanas.setName("panelPestanas"); // NOI18N

        panelBajas.setName("panelBajas"); // NOI18N
        panelBajas.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaBorrados.setModel(modeloBorrados);
        tablaBorrados.setColumnControlVisible(true);
        tablaBorrados.setName("tablaBorrados"); // NOI18N
        jScrollPane1.setViewportView(tablaBorrados);

        panelBajas.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.codeko.apps.maimonides.MaimonidesApp.class).getContext().getResourceMap(PanelInfoImportacionAlumnos.class);
        panelPestanas.addTab(resourceMap.getString("panelBajas.TabConstraints.tabTitle"), panelBajas); // NOI18N

        panelAltas.setName("panelAltas"); // NOI18N
        panelAltas.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tablaNuevos.setModel(modeloNuevos);
        tablaNuevos.setColumnControlVisible(true);
        tablaNuevos.setName("tablaNuevos"); // NOI18N
        jScrollPane2.setViewportView(tablaNuevos);

        panelAltas.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        panelPestanas.addTab(resourceMap.getString("panelAltas.TabConstraints.tabTitle"), panelAltas); // NOI18N

        panelErrores.setName("panelErrores"); // NOI18N
        panelErrores.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tablaErrores.setModel(new javax.swing.table.DefaultTableModel(
            errores,
            cab
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaErrores.setColumnControlVisible(true);
        tablaErrores.setName("tablaErrores"); // NOI18N
        jScrollPane3.setViewportView(tablaErrores);
        tablaErrores.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tablaErrores.columnModel.title0")); // NOI18N
        tablaErrores.getColumnModel().getColumn(1).setPreferredWidth(90);
        tablaErrores.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tablaErrores.columnModel.title1")); // NOI18N
        tablaErrores.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tablaErrores.columnModel.title2")); // NOI18N

        panelErrores.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        panelPestanas.addTab(resourceMap.getString("panelErrores.TabConstraints.tabTitle"), panelErrores); // NOI18N

        lTitulo.setText(resourceMap.getString("lTitulo.text",procesados,guardados));
        lTitulo.setName("lTitulo"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(panelPestanas, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPestanas, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lTitulo;
    private javax.swing.JPanel panelAltas;
    private javax.swing.JPanel panelBajas;
    private javax.swing.JPanel panelErrores;
    private javax.swing.JTabbedPane panelPestanas;
    private org.jdesktop.swingx.JXTable tablaBorrados;
    private org.jdesktop.swingx.JXTable tablaErrores;
    private org.jdesktop.swingx.JXTable tablaNuevos;
    // End of variables declaration//GEN-END:variables
}
