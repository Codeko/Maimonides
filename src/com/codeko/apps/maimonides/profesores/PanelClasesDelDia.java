/**
 *  Maimónides, gestión para centros escolares.
 *  Copyright Codeko and individual contributors
 *  as indicated by the @author tags.
 * 
 *  This is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as
 *  published by the Free Software Foundation; either version 2 of
 *  the License, or (at your option) any later version.
 * 
 *  This software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public
 *  License along with this software; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *  02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *  
 *  For more information:
 *  maimonides@codeko.com
 *  http://codeko.com/maimonides
**/



/*
 * PanelClasesDelDia.java
 *
 * Created on 17-jul-2010, 17:36:51
 */
package com.codeko.apps.maimonides.profesores;

import com.codeko.apps.maimonides.ICargable;
import com.codeko.apps.maimonides.MaimonidesApp;
import com.codeko.apps.maimonides.MaimonidesUtil;
import com.codeko.apps.maimonides.elementos.Horario;
import com.codeko.apps.maimonides.elementos.Profesor;
import com.codeko.apps.maimonides.horarios.BloqueHorario;
import com.codeko.swing.CdkProcesoLabel;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import org.jdesktop.application.Action;

import org.jdesktop.application.Task;

/**
 *
 * @author codeko
 */
public class PanelClasesDelDia extends javax.swing.JPanel implements ICargable {
    PanelClasesDelDia auto=this;
    boolean cargado = false;

    /** Creates new form PanelClasesDelDia */
    public PanelClasesDelDia() {
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setLayout(new java.awt.GridLayout(1, 6, 5, 0));
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        cargar();
    }//GEN-LAST:event_formAncestorAdded

    @Action(block = Task.BlockingScope.ACTION)
    public Task<ArrayList<Component>, Void> actualizar() {
        return new ActualizarTask(org.jdesktop.application.Application.getInstance(com.codeko.apps.maimonides.MaimonidesApp.class));
    }

    class ActualizarTask extends org.jdesktop.application.Task<ArrayList<Component>, Void> {

        ActualizarTask(org.jdesktop.application.Application app) {
            super(app);
            removeAll();
            CdkProcesoLabel cpl = new CdkProcesoLabel();
            cpl.setText("Verificando clases del día...");
            cpl.setProcesando(true);
            add(cpl);
        }

        @Override
        protected ArrayList<Component> doInBackground() {
            ArrayList<Component> comps = new ArrayList<Component>();
            Profesor p = MaimonidesApp.getApplication().getUsuario().getProfesor();
            if (p != null) {
                //GregorianCalendar cal = new GregorianCalendar();
                int dia = 1;//MaimonidesUtil.getDiaFecha(cal);
                ArrayList<BloqueHorario> horarios = Horario.getHorarios(null, p, null, dia, null);
                JLabel[] etiquetas = new JLabel[6];
                for (int i = 0; i < etiquetas.length; i++) {
                    etiquetas[i] = new JLabel("");//<html><big><b><font color='green'>Sin clase</font></b></big>");
                    etiquetas[i].setBorder(BorderFactory.createTitledBorder((i + 1) + "ª hora"));
                    etiquetas[i].setFont(etiquetas[i].getFont().deriveFont(12f));
//                    etiquetas[i].setHorizontalAlignment(SwingConstants.CENTER);
//                    etiquetas[i].setVerticalTextPosition(SwingConstants.CENTER);
//                    etiquetas[i].setVerticalAlignment(SwingConstants.CENTER);
                }
                for (BloqueHorario b : horarios) {
                    String str = "<b>" + b.getUnidades() + "</b> " + (b.getDependencia() != null ? b.getDependencia().getNombre() : "") + "<br/>" + b.toString().replace("<html>", "");
                    etiquetas[b.getHora() - 1].setText("<html>" + str);
                }
                comps.addAll(Arrays.asList(etiquetas));
            } else {
                System.out.println("El profesor es nulo!");
            }
            return comps;
        }

        @Override
        protected void succeeded(ArrayList<Component> result) {
            removeAll();
            if(result.isEmpty()){
                getParent().remove(auto);
            }else{
                for (Component c : result) {
                    add(c);
                }
                updateUI();
            }
        }
    }

    @Override
    public void cargar() {
        if (!isCargado()) {
            actualizarDatos();
            setCargado(true);
        }
    }

    public void actualizarDatos() {
        MaimonidesUtil.ejecutarTask(this, "actualizar");
    }

    @Override
    public void vaciar() {
        setCargado(false);
    }

    @Override
    public boolean isCargado() {
        return cargado;
    }

    @Override
    public void setCargado(boolean cargado) {
        this.cargado = cargado;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
