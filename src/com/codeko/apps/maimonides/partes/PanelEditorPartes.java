/**
 *  Maimónides, gestión para centros escolares.
 *  Copyright Codeko and individual contributors
 *  as indicated by the @author tags.
 * 
 *  This is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as
 *  published by the Free Software Foundation; either version 2 of
 *  the License, or (at your option) any later version.
 * 
 *  This software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public
 *  License along with this software; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *  02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *  
 *  For more information:
 *  maimonides@codeko.com
 *  http://codeko.com/maimonides
**/


/*
 * PanelEditorPartes.java
 *
 * Created on 1 de septiembre de 2008, 12:43
 */
package com.codeko.apps.maimonides.partes;

import com.codeko.apps.maimonides.IPanel;
import com.codeko.apps.maimonides.elementos.ParteFaltas;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author  Codeko
 */
public class PanelEditorPartes extends javax.swing.JPanel implements IPanel {

    /** Creates new form PanelEditorPartes */
    public PanelEditorPartes() {
        initComponents();
        panelListaPartes1.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if ("seleccionArbol".equals(evt.getPropertyName())) {
                    Object obj = evt.getNewValue();
                    if (obj instanceof TreePath) {
                        TreePath path = (TreePath) obj;
                        Object val = path.getLastPathComponent();
                        if (val instanceof DefaultMutableTreeNode && ((DefaultMutableTreeNode) val).getUserObject() instanceof ParteFaltas) {
                            ParteFaltas parte = (ParteFaltas) ((DefaultMutableTreeNode) val).getUserObject();
                            panelListaAlumnosParte1.cargar(parte);
                        } else {
                            //TODO Implementar el resto de opciones
                        }
                    } else {
                        panelListaAlumnosParte1.limpiar();
                    }
                } else if ("cambioFecha".equals(evt.getPropertyName())) {
                    panelListaAlumnosParte1.limpiar();
                    panelListaAlumnosParte1.setParte(null);
                } else if ("partesCargados".equals(evt.getPropertyName())) {
                    if (!(Boolean) evt.getNewValue()) {
                        panelListaAlumnosParte1.limpiar();
                        panelListaAlumnosParte1.setParte(null);
                    }
                }
            }
        });

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        panelListaPartes1 = new com.codeko.apps.maimonides.partes.PanelListaPartes();
        panelListaAlumnosParte1 = new com.codeko.apps.maimonides.partes.PanelListaAlumnosParte();

        setName("maimonides.paneles.faltas.partes_asistencia"); // NOI18N

        jSplitPane1.setDividerLocation(210);
        jSplitPane1.setDividerSize(9);
        jSplitPane1.setName("jSplitPane1"); // NOI18N
        jSplitPane1.setOneTouchExpandable(true);

        panelListaPartes1.setName("panelListaPartes1"); // NOI18N
        jSplitPane1.setLeftComponent(panelListaPartes1);

        panelListaAlumnosParte1.setName("panelListaAlumnosParte1"); // NOI18N
        jSplitPane1.setRightComponent(panelListaAlumnosParte1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane jSplitPane1;
    private com.codeko.apps.maimonides.partes.PanelListaAlumnosParte panelListaAlumnosParte1;
    private com.codeko.apps.maimonides.partes.PanelListaPartes panelListaPartes1;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean puedoSusituir() {
        return true;
    }
}
