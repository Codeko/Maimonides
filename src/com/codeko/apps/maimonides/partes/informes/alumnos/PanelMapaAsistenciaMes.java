/**
 *  Maimónides, gestión para centros escolares.
 *  Copyright Codeko and individual contributors
 *  as indicated by the @author tags.
 * 
 *  This is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as
 *  published by the Free Software Foundation; either version 2 of
 *  the License, or (at your option) any later version.
 * 
 *  This software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public
 *  License along with this software; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *  02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *  
 *  For more information:
 *  maimonides@codeko.com
 *  http://codeko.com/maimonides
**/


/*
 * PanelMapaAsistenciaMes.java
 *
 * Created on 04-sep-2009, 14:48:29
 */
package com.codeko.apps.maimonides.partes.informes.alumnos;

import com.codeko.apps.maimonides.ICargable;
import com.codeko.apps.maimonides.elementos.Alumno;
import com.codeko.util.Fechas;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Vector;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Codeko
 */
public class PanelMapaAsistenciaMes extends javax.swing.JPanel implements ICargable {

    GregorianCalendar fecha = null;
    boolean cargado = false;
    Vector<PanelMapaAsistenciaBloque> bloques = new Vector<PanelMapaAsistenciaBloque>();
    Alumno alumno = null;
    PropertyChangeListener listenerBloque = new PropertyChangeListener() {

        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            firePropertyChange(evt.getPropertyName(), evt.getOldValue(), evt.getNewValue());
        }
    };

    public PanelMapaAsistenciaMes() {
        this(new GregorianCalendar());
    }

    public PanelMapaAsistenciaMes(GregorianCalendar mes) {
        initComponents();
        setFecha((GregorianCalendar) mes.clone());
        for (int i = 0; i < 5; i++) {
            PanelMapaAsistenciaBloque b = new PanelMapaAsistenciaBloque(GregorianCalendar.MONDAY + i);
            b.addPropertyChangeListener(listenerBloque);
            b.setFecha(mes);
            add(b);
            bloques.add(b);
        }
        String titulo=" " + mes.getDisplayName(GregorianCalendar.MONTH, GregorianCalendar.LONG, Locale.getDefault()) + " ";
        ((TitledBorder) getBorder()).setTitle(titulo);
    }

    public GregorianCalendar getFecha() {
        return fecha;
    }

    public void setFecha(GregorianCalendar fecha) {
        this.fecha = fecha;
    }

    public Alumno getAlumno() {
        return alumno;
    }

    public void setAlumno(Alumno alumno) {
        this.alumno = alumno;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.codeko.apps.maimonides.MaimonidesApp.class).getContext().getResourceMap(PanelMapaAsistenciaMes.class);
        setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("Form.border.title"))); // NOI18N
        setName("Form"); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.GridLayout(1, 4));
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void cargar() {
        for (PanelMapaAsistenciaBloque pb : bloques) {
            pb.setAlumno(getAlumno());
            pb.cargar();
        }
        setCargado(true);
    }

    @Override
    public void vaciar() {
        setAlumno(null);
        for (PanelMapaAsistenciaBloque pb : bloques) {
            pb.vaciar();
        }
        setCargado(false);
    }

    @Override
    public boolean isCargado() {
        return cargado;
    }

    @Override
    public void setCargado(boolean cargado) {
        this.cargado = cargado;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
